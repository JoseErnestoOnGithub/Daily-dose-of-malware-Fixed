import requests
from BeautifulSoup import BeautifulSoup
import datetime
import os
import results
from colors import bcolors

timestamp_now = datetime.datetime.now().strftime('%Y-%m-%d')

headers = {
    'User-Agent': "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36"
}


def malcode(export_bool=False, download_bool=False, output_bool=False):
    print bcolors.OKBLUE + "++++++++++++++++++++++++++++++++++++"
    print "Brought to you by Malc0de\n" \
          "https://twitter.com/malc0de\n" \
          "http://malc0de.com"
    print "++++++++++++++++++++++++++++++++++++" + bcolors.ENDC
    info = dict()
    req = requests.get("http://malc0de.com/database/", headers=headers)  # make request to malcode database
    soup = BeautifulSoup(req.text)
    table = soup.find("table", {"class": "prettytable"})  # find table responsible for keeping information
    guard = 0
    directory = "malcode" + timestamp_now

    for row in table.findAll("tr"):  # for every row in table
        if guard > 0:  # first row is empty
            cells = row.findAll("td")  # for every cell in table

            url = cells[1].text  # get url
            info.update({url: [cells[0].find(text=True), cells[6].find(text=True)]})  # update dict {url: [date,md5] }

        guard = +1  # row is 1++

    if export_bool:
        try:
            results.export(directory, info)
            print "Exported to " + directory + '.txt'
        except OSError as e:
            print "Error " + e.strerror

    elif download_bool:
        try:
            os.mkdir(directory)
        except OSError as e:
            print e
        finally:
            for i in info.keys():
                print("Downloading file " + i)
                results.download("http://" + i, directory)
                print("---------------------------")

    elif output_bool:
        results.output(info)

    else:
        print "Please specify: --download or --export or --output"
